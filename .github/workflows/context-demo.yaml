name: Context Demo
 
on:
    push:
        branches:
          - main #master
    workflow_dispatch:
 
jobs:
    job1:
        name: Erste Analyse
        runs-on: ubuntu-latest
        outputs:
            commit-message: ${{ steps.get_commit_message.outputs.message }}
            actor-name: ${{ steps.get_actor.outputs.actor }}
        steps:
           - name: Checkout
             uses: actions/checkout@v4
 
           - name: Zeige GitHub Kontext
             run: echo ${{ toJson(github) }}
 
           - name: Commit Message lesen
             id: get_commit_message
             run: echo "message=$(git log -1 --pretty=%B)" >> "$GITHUB_OUTPUT"
 
           - name: Actor als Output speichern
             id: get_actor
             run: echo "actor=${{ github.actor }}" >> "$GITHUB_OUTPUT"
 
    job2:
        name: Zeige Werte aus Job 1
        runs-on: ubuntu-latest
        needs: job1
        steps:
          - name: Outputs anzeigen
            run: |
             echo "Commit-Message aus Job 1: ${{ needs.job1.outputs.commit-message }}"
             echo "Actor aus Job 1: ${{ needs.job1.outputs.actor-name }}"
 
          - name: JSON aller Kontexte anzeigen
            run: |
             echo "Env Kontext:"
             echo '${{ toJson(env) }}'
 
             echo "Runner Kontext:"
             echo '${{ toJson(runner) }}'
 
             echo "Job Kontext:"
             echo '${{ toJson(job) }}'
 
             echo "Steps Kontext:"
             echo '${{ toJson(steps) }}'
